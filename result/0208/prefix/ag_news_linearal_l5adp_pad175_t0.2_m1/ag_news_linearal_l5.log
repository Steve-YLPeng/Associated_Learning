total count words 102019
vocab size 30000
found 26754 words in glove
model: LinearModelML(
  (layers): ModuleList(
    (0): EMBLayer(
      (enc): ENC(
        (b): Sequential(
          (0): Linear(in_features=300, out_features=128, bias=True)
          (1): Tanh()
        )
        (f): Embedding(30000, 300)
        (cri): MSELoss()
      )
      (ae): AE(
        (g): Sequential(
          (0): Linear(in_features=4, out_features=128, bias=True)
          (1): Tanh()
        )
        (h): Sequential(
          (0): Linear(in_features=128, out_features=4, bias=True)
          (1): Sigmoid()
        )
        (cri): CrossEntropyLoss()
      )
    )
    (1): LinearLayer(
      (enc): ENC(
        (b): Sequential(
          (0): Linear(in_features=300, out_features=128, bias=True)
          (1): Tanh()
        )
        (f): Sequential(
          (0): Linear(in_features=300, out_features=300, bias=True)
          (1): ELU(alpha=1.0)
        )
        (cri): MSELoss()
      )
      (ae): AE(
        (g): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
          (1): Tanh()
        )
        (h): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
        )
        (cri): MSELoss()
      )
    )
    (2): LinearLayer(
      (enc): ENC(
        (b): Sequential(
          (0): Linear(in_features=300, out_features=128, bias=True)
          (1): Tanh()
        )
        (f): Sequential(
          (0): Linear(in_features=300, out_features=300, bias=True)
          (1): ELU(alpha=1.0)
        )
        (cri): MSELoss()
      )
      (ae): AE(
        (g): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
          (1): Tanh()
        )
        (h): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
        )
        (cri): MSELoss()
      )
    )
    (3): LinearLayer(
      (enc): ENC(
        (b): Sequential(
          (0): Linear(in_features=300, out_features=128, bias=True)
          (1): Tanh()
        )
        (f): Sequential(
          (0): Linear(in_features=300, out_features=300, bias=True)
          (1): ELU(alpha=1.0)
        )
        (cri): MSELoss()
      )
      (ae): AE(
        (g): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
          (1): Tanh()
        )
        (h): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
        )
        (cri): MSELoss()
      )
    )
    (4): LinearLayer(
      (enc): ENC(
        (b): Sequential(
          (0): Linear(in_features=300, out_features=128, bias=True)
          (1): Tanh()
        )
        (f): Sequential(
          (0): Linear(in_features=300, out_features=300, bias=True)
          (1): ELU(alpha=1.0)
        )
        (cri): MSELoss()
      )
      (ae): AE(
        (g): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
          (1): Tanh()
        )
        (h): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
        )
        (cri): MSELoss()
      )
    )
  )
)
layers.0.enc.b.0.weight 38400
layers.0.enc.b.0.bias 128
layers.0.enc.f.weight 9000000
layers.0.ae.g.0.weight 512
layers.0.ae.g.0.bias 128
layers.0.ae.h.0.weight 512
layers.0.ae.h.0.bias 4
layers.1.enc.b.0.weight 38400
layers.1.enc.b.0.bias 128
layers.1.enc.f.0.weight 90000
layers.1.enc.f.0.bias 300
layers.1.ae.g.0.weight 16384
layers.1.ae.g.0.bias 128
layers.1.ae.h.0.weight 16384
layers.1.ae.h.0.bias 128
layers.2.enc.b.0.weight 38400
layers.2.enc.b.0.bias 128
layers.2.enc.f.0.weight 90000
layers.2.enc.f.0.bias 300
layers.2.ae.g.0.weight 16384
layers.2.ae.g.0.bias 128
layers.2.ae.h.0.weight 16384
layers.2.ae.h.0.bias 128
layers.3.enc.b.0.weight 38400
layers.3.enc.b.0.bias 128
layers.3.enc.f.0.weight 90000
layers.3.enc.f.0.bias 300
layers.3.ae.g.0.weight 16384
layers.3.ae.g.0.bias 128
layers.3.ae.h.0.weight 16384
layers.3.ae.h.0.bias 128
layers.4.enc.b.0.weight 38400
layers.4.enc.b.0.bias 128
layers.4.enc.f.0.weight 90000
layers.4.enc.f.0.bias 300
layers.4.ae.g.0.weight 16384
layers.4.ae.g.0.bias 128
layers.4.ae.h.0.weight 16384
layers.4.ae.h.0.bias 128
Total Trainable Params: 9687092
Start Training
train_mask {0}
gc 0
Train Epoch0 Acc 0.25 (30000/120000), AUC 0.4916439354419708
ep0_train_time 8.396867036819458
Test Epoch0 threshold 0.2 Acc 0.9004934210526315, AUC 0.9740573167800903, avg_entr 0.18313245475292206
ep0_t0.2_test_time 0.2648653984069824
Save ckpt to ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt  ,ep 0
gc 0
Train Epoch1 Acc 0.25 (30000/120000), AUC 0.5034721493721008
ep1_train_time 7.947580099105835
Test Epoch1 threshold 0.2 Acc 0.9133223684210526, AUC 0.9780408143997192, avg_entr 0.10473218560218811
ep1_t0.2_test_time 0.25127267837524414
Save ckpt to ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt  ,ep 1
gc 0
Train Epoch2 Acc 0.25 (30000/120000), AUC 0.5052529573440552
ep2_train_time 8.010760307312012
Test Epoch2 threshold 0.2 Acc 0.9125, AUC 0.979540228843689, avg_entr 0.08360035717487335
ep2_t0.2_test_time 0.25191545486450195
Save ckpt to ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt  ,ep 2
gc 0
Train Epoch3 Acc 0.25 (30000/120000), AUC 0.5049141645431519
ep3_train_time 8.159117460250854
Test Epoch3 threshold 0.2 Acc 0.9159539473684211, AUC 0.9803920984268188, avg_entr 0.06769760698080063
ep3_t0.2_test_time 0.2511169910430908
Save ckpt to ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt  ,ep 3
gc 0
Train Epoch4 Acc 0.25 (30000/120000), AUC 0.5054305791854858
ep4_train_time 8.034956216812134
Test Epoch4 threshold 0.2 Acc 0.9166118421052631, AUC 0.98063063621521, avg_entr 0.05896952748298645
ep4_t0.2_test_time 0.252077579498291
Save ckpt to ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt  ,ep 4
gc 0
Train Epoch5 Acc 0.25 (30000/120000), AUC 0.5053695440292358
ep5_train_time 8.047059535980225
Test Epoch5 threshold 0.2 Acc 0.9166118421052631, AUC 0.9808664321899414, avg_entr 0.05397120863199234
ep5_t0.2_test_time 0.2507758140563965
Save ckpt to ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt  ,ep 5
gc 0
Train Epoch6 Acc 0.25 (30000/120000), AUC 0.5060206651687622
ep6_train_time 8.290371179580688
Test Epoch6 threshold 0.2 Acc 0.9143092105263158, AUC 0.9808716773986816, avg_entr 0.0495668426156044
ep6_t0.2_test_time 0.2573084831237793
Save ckpt to ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt  ,ep 6
gc 0
Train Epoch7 Acc 0.25 (30000/120000), AUC 0.5067617893218994
ep7_train_time 8.166452884674072
Test Epoch7 threshold 0.2 Acc 0.9144736842105263, AUC 0.9805639982223511, avg_entr 0.048636436462402344
ep7_t0.2_test_time 0.25273990631103516
gc 0
Train Epoch8 Acc 0.25 (30000/120000), AUC 0.5076918601989746
ep8_train_time 8.028498411178589
Test Epoch8 threshold 0.2 Acc 0.915296052631579, AUC 0.980617105960846, avg_entr 0.043019406497478485
ep8_t0.2_test_time 0.2591547966003418
gc 0
Train Epoch9 Acc 0.25 (30000/120000), AUC 0.5082735419273376
ep9_train_time 8.482468128204346
Test Epoch9 threshold 0.2 Acc 0.9161184210526315, AUC 0.9804315567016602, avg_entr 0.041804078966379166
ep9_t0.2_test_time 0.26500391960144043
Best AUC 0.9808716773986816
train_loss (2, 5, 10)
valid_acc (10, 1)
valid_AUC (10, 1)
train_acc (10,)
Figure(640x480)
Figure(640x480)
Figure(640x480)
Figure(640x480)
Figure(640x480)
Start Testing
Load ckpt at ckpt/ag_news_linearal_l5adp_pad175_t0.2_m1//ag_news_linearal_l5_prefix.pt
[[1363   55   80   34]
 [   8 1486    7    6]
 [  30   17 1347  106]
 [  36   21  121 1363]]
Figure(640x480)
tensor([0.0373, 0.0007, 0.0199,  ..., 0.0004, 0.0024, 0.0115])
[[   0 1431  101    0]
 [   0  857  650    0]
 [   0 1366  134    0]
 [   0 1508   33    0]]
Figure(640x480)
tensor([1.1162, 1.1433, 1.1528,  ..., 1.1790, 1.1460, 1.1610])
[[   0    0    0 1532]
 [   0    0    0 1507]
 [   0    0    0 1500]
 [   0    0    0 1541]]
Figure(640x480)
tensor([1.2410, 1.2459, 1.2566,  ..., 1.2318, 1.2500, 1.2506])
[[   0 1532    0    0]
 [   0 1507    0    0]
 [   0 1500    0    0]
 [   0 1541    0    0]]
Figure(640x480)
tensor([1.2182, 1.2256, 1.2245,  ..., 1.2304, 1.2404, 1.2251])
[[   0 1532    0    0]
 [   0 1507    0    0]
 [   0 1500    0    0]
 [   0 1541    0    0]]
Figure(640x480)
tensor([1.2966, 1.3416, 1.3387,  ..., 1.3194, 1.3218, 1.3250])
